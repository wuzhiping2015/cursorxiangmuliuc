@use 'variables' as *; // 确保在文件开头引入variables
// 毛玻璃效果
@mixin glassmorphism {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid $border-color;
}

// 响应式媒体查询
@mixin respond-to($breakpoint) {
    @if $breakpoint==sm {
        @media (min-width: $breakpoint-sm) {
            @content;
        }
    }
    @if $breakpoint==md {
        @media (min-width: $breakpoint-md) {
            @content;
        }
    }
    @if $breakpoint==lg {
        @media (min-width: $breakpoint-lg) {
            @content;
        }
    }
    @if $breakpoint==xl {
        @media (min-width: $breakpoint-xl) {
            @content;
        }
    }
    @if $breakpoint==xxl {
        @media (min-width: $breakpoint-xxl) {
            @content;
        }
    }
}

// 弹性布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// 网格布局
@mixin grid($columns: 1, $gap: $spacing-md) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

// 文字省略
@mixin text-ellipsis($lines: 1) {
    @if $lines==1 {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    @else {
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
}

// 渐变文字
@mixin gradient-text($gradient: $primary-gradient) {
    background: $gradient;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

// 动画过渡
@mixin transition($properties...) {
    $transitions: ();
    @each $property in $properties {
        $transitions: append($transitions, $property $transition-normal, comma);
    }
    transition: $transitions;
}

// 阴影悬浮效果
@mixin hover-shadow {
    transition: transform $transition-normal, box-shadow $transition-normal;
    &:hover {
        transform: translateY(-2px);
        box-shadow: $shadow-lg;
    }
}